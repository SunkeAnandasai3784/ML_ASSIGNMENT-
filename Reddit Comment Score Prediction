# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load data
train_data = pd.read_csv('train.csv')
test_data = pd.read_csv('test.csv')

# Preprocess data
train_data['body'] = train_data['body'].apply(lambda x: x.lower()) # convert to lowercase
train_data['body'] = train_data['body'].apply(lambda x: ' '.join(x.split())) # remove extra whitespace

# Split data into training and validation sets
X_train, X_val, y_train, y_val = train_test_split(train_data['body'], train_data['score'], test_size=0.2, random_state=42)

# Vectorize text data
vectorizer = TfidfVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_val_vec = vectorizer.transform(X_val)

# Train random forest regression model
model = RandomForestRegressor(n_estimators=100)
model.fit(X_train_vec, y_train)

# Evaluate model
y_pred = model.predict(X_val_vec)
mse = mean_squared_error(y_val, y_pred)
print("Mean squared error:", mse)

# Make predictions on test data
test_data['body'] = test_data['body'].apply(lambda x: x.lower())
test_data['body'] = test_data['body'].apply(lambda x: ' '.join(x.split()))
X_test_vec = vectorizer.transform(test_data['body'])
test_data['score'] = model.predict(X_test_vec)

# Save predictions to a CSV file
test_data[['id', 'score']].to_csv('submission.csv', index=False)
